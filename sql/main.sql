CREATE TABLE booking_service."booking" (
                                           "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                           "user_id" int not null,
                                           "workplace_id" int not null,
                                           "start_date" timestamp not null,
                                           "end_date" TIMESTAMP not null,
                                           "status" varchar not null,
                                           "created_at" TIMESTAMP not null default now(),
                                           "updated_at" timestamp not null default now()
);

Create table booking_service."parking_bookings"(
                                                   "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                   "user_id" int NOT NULL,
                                                   "parking_space_id" int NOT NULL,
                                                   "start_date" timestamp NOT NULL,
                                                   "end_date" timestamp NOT NULL,
                                                   "status" VARCHAR not null,
                                                   "created_at" TIMESTAMP NOT NULL default now(),
                                                   "updated_at" timestamp not null default now(),
                                                   FOREIGN KEY ("parking_space_id") REFERENCES resource_service.parking_spaces ("id") ON DELETE SET NULL
);

ALTER TABLE booking_service."booking" ADD FOREIGN KEY ("user_id") REFERENCES auth."users" ("user_id");
ALTER TABLE booking_service."booking" ADD CONSTRAINT check_booking_dates
    CHECK (end_date > start_date);
ALTER TABLE booking_service."booking" ADD FOREIGN KEY ("workplace_id") REFERENCES resource_service.workplace ("id");

ALTER TABLE booking_service."parking_bookings" ADD FOREIGN KEY ("user_id") REFERENCES auth.users ("user_id");
